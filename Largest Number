 Largest Number

Given a list of non-negative integers nums, arrange them such that they form the largest number and return it.

Since the result may be very large, so you need to return a string instead of an integer.

Example 1:
Input: nums = [10,2]
Output: "210"

Example 2:
Input: nums = [3,30,34,5,9]
Output: "9534330"
Â 

Constraints:

1 <= nums.length <= 100
0 <= nums[i] <= 109

Slution :

class Solution {
    public String largestNumber(int[] nums) {
        // Convert the numbers to strings
        String[] arr = new String[nums.length];
        for (int i = 0; i < nums.length; i++) {
            arr[i] = String.valueOf(nums[i]);
        }
        
        // Sort strings according to the custom comparator
        Arrays.sort(arr, new Comparator<String>() {
            @Override
            public int compare(String a, String b) {
                // Compare a+b and b+a
                String order1 = a + b;
                String order2 = b + a;
                return order2.compareTo(order1); // Sort in descending order
            }
        });
        
        // Edge case: if the largest number is "0", the entire number is "0"
        if (arr[0].equals("0")) {
            return "0";
        }
        
        // Join the sorted strings
        StringBuilder largestNumber = new StringBuilder();
        for (String num : arr) {
            largestNumber.append(num);
        }
        
        return largestNumber.toString();
    }
}
